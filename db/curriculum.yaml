- title: Output numbers and blank lines
  title_html: "Output numbers<br>and blank lines"
  features: run instructions console
  yellow:
    assignment: |
      Click Power.
      Click Run, and watch the program run.
      Then click Continue.
    code: |
      puts 8
      puts
      puts 3
  blue:
    code: |
      puts 6
      puts 4
    solution: |
      6
      4
  red:
    assignment: |
      Click Run Test Case.
      Read the error message.
      Fix the program, then click Run Test Case again.
    code: |
      puts 4
      ptus 2
    solution: |
      puts 4
      puts 2
    cases:
    - expected_output: |
        4
        2
  green:
    assignment: |
      Write a program to output a blank line and the number 10.
      Click Run Test Case to check your answer.
    solution: |
      puts
      puts 10
    cases:
    - expected_output: "\n10\n"

- title: Comments
  features: run instructions console
  yellow:
    assignment: |
      Anything from `#` to the line's end is a comment.
      You can "comment out" code by writing `#` before it.
    code: |
      # Approximations of
      # important numbers
      # in math

      puts 3.14 # pi

      puts 2.72 # e

      #puts 1.41
  red:
    assignment: |
      Add `#` symbols so Run Test Case succeeds.
    code: |
      Count to three
      puts 1
      puts 2
      puts 2.5
      puts 3
    solution: |
      # Count to three
      puts 1
      puts 2
      #puts 2.5
      puts 3
    cases:
    - expected_output: |
        1
        2
        3
  green:
    assignment: |
      Write a program to output the numbers 40.02 and -105.28.
      Use comments to explain they mean latitude and longitude.
    solution: |
      # output latitude
      puts 40.02

      # output longitude
      puts -105.28
    cases:
    - expected_output: |
        40.02
        -105.28

#- title: Multiple arguments
#  features: run instructions console
#  yellow:
#    assignment: |
#      You can `puts` multiple numbers at once.
#      Use commas to separate the arguments.
#      Any extra spacing or decimal places won't affect the output.
#    code: |
#      puts 0.25, 0.50,  1.00
#      puts 2.50, 5.00, 10.00
#  red:
#    assignment: Fix the commas so Run Test Case succeeds.
#    code: |
#      puts 1,
#      puts 2, 3,
#      puts, 4
#      puts 5 6
#      puts 7, , 8
#    solution: |
#      puts 1
#      puts 2, 3
#      puts 4
#      puts 5, 6
#      puts 7
#      puts
#      puts 8
#    cases:
#    - expected_output: |
#        1
#        2
#        3
#        4
#        5
#        6
#        7
#
#        8
#  green:
#    assignment: |
#      Write a one-line program to output 1 2 3.
#      Each number should be a separate line of output.
#    solution: |
#      puts 1, 2, 3
#    cases:
#    - expected_output: |
#       1
#       2
#       3

- title: Demo of advanced debugger features
  features: run step partial_calls vars instructions console tokens
  yellow:
    assignment: Demo of advanced debugger features
    code: |
      puts 3 + 4 +
        gets.to_i
    cases:
    - input: 5
      expected_output: "12\n"
    - input: 10
      expected_output: "17\n"

  #  - code: puts 7
  #  - code: |
  #      puts 9
  #      puts 1, 2
  #  - code: |
  #      puts   6
  #      puts   7
  #      #puts  8
  #      puts   9
  #      puts  10
  #      puts  11
  #      puts #12
  #  - code: |
  #      puts
  #      puts 1
  #      puts 1, 2
  #      puts 1, 2, 3
  #      
  #      puts 3, 2, 1
  #      puts    2, 1
  #      puts       1
  #      puts
